# Produced by CVXGEN, 2017-04-11 23:31:07 -0400.
# CVXGEN is Copyright (C) 2006-2012 Jacob Mattingley, jem@cvxgen.com.
# The code in this file is Copyright (C) 2006-2012 Jacob Mattingley.
# CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
# applications without prior written permission from Jacob Mattingley.

# Filename: description.cvxgen.
# Description: A description of the CVXGEN problem.

dimensions
  N = 6 # number of states
  P = 24 # number of sensors
  T = 10 # number of timesteps
end

parameters
  CA (P*T,N) {1,1 2,2 3,3 4,4 5,5 6,6 7,1 8,2 9,3 10,4 11,5 12,6 13,1 14,2 15,3 16,4 17,5 18,6 19,1 20,2 21,3 22,4 23,5 24,6 1,4 2,5 3,6 7,4 8,5 9,6 13,4 14,5 15,6 19,4 20,5 21,6 25,1 26,2 27,3 28,4 29,5 30,6 31,1 32,2 33,3 34,4 35,5 36,6 37,1 38,2 39,3 40,4 41,5 42,6 43,1 44,2 45,3 46,4 47,5 48,6 25,4 26,5 27,6 31,4 32,5 33,6 37,4 38,5 39,6 43,4 44,5 45,6 49,1 50,2 51,3 52,4 53,5 54,6 55,1 56,2 57,3 58,4 59,5 60,6 61,1 62,2 63,3 64,4 65,5 66,6 67,1 68,2 69,3 70,4 71,5 72,6 49,4 50,5 51,6 55,4 56,5 57,6 61,4 62,5 63,6 67,4 68,5 69,6 73,1 74,2 75,3 76,4 77,5 78,6 79,1 80,2 81,3 82,4 83,5 84,6 85,1 86,2 87,3 88,4 89,5 90,6 91,1 92,2 93,3 94,4 95,5 96,6 73,4 74,5 75,6 79,4 80,5 81,6 85,4 86,5 87,6 91,4 92,5 93,6 97,1 98,2 99,3 100,4 101,5 102,6 103,1 104,2 105,3 106,4 107,5 108,6 109,1 110,2 111,3 112,4 113,5 114,6 115,1 116,2 117,3 118,4 119,5 120,6 97,4 98,5 99,6 103,4 104,5 105,6 109,4 110,5 111,6 115,4 116,5 117,6 121,1 122,2 123,3 124,4 125,5 126,6 127,1 128,2 129,3 130,4 131,5 132,6 133,1 134,2 135,3 136,4 137,5 138,6 139,1 140,2 141,3 142,4 143,5 144,6 121,4 122,5 123,6 127,4 128,5 129,6 133,4 134,5 135,6 139,4 140,5 141,6 145,1 146,2 147,3 148,4 149,5 150,6 151,1 152,2 153,3 154,4 155,5 156,6 157,1 158,2 159,3 160,4 161,5 162,6 163,1 164,2 165,3 166,4 167,5 168,6 145,4 146,5 147,6 151,4 152,5 153,6 157,4 158,5 159,6 163,4 164,5 165,6 169,1 170,2 171,3 172,4 173,5 174,6 175,1 176,2 177,3 178,4 179,5 180,6 181,1 182,2 183,3 184,4 185,5 186,6 187,1 188,2 189,3 190,4 191,5 192,6 169,4 170,5 171,6 175,4 176,5 177,6 181,4 182,5 183,6 187,4 188,5 189,6 193,1 194,2 195,3 196,4 197,5 198,6 199,1 200,2 201,3 202,4 203,5 204,6 205,1 206,2 207,3 208,4 209,5 210,6 211,1 212,2 213,3 214,4 215,5 216,6 193,4 194,5 195,6 199,4 200,5 201,6 205,4 206,5 207,6 211,4 212,5 213,6 217,1 218,2 219,3 220,4 221,5 222,6 223,1 224,2 225,3 226,4 227,5 228,6 229,1 230,2 231,3 232,4 233,5 234,6 235,1 236,2 237,3 238,4 239,5 240,6 217,4 218,5 219,6 223,4 224,5 225,6 229,4 230,5 231,6 235,4 236,5 237,6}
  YBu (P*T,1)
end

variables
  x (N)
end

minimize
  sum(abs(YBu - CA*x))
end

# linearize about [1 0 0 0 0 0 0 0 0 0]:  9 nonzero entries,  360 total in CA matrix, 2880 nonzero KKT matrix entries
# linearize about [1 1 1 1 0 0 0 0 0 0]:  9 nonzero entries
# linearize about [1 1 1 1 1 1 1 0 0 0]: 13 nonzero entries,  520 total in CA matrix, 3520 nonzero KKT matrix entries
# linearize about [1 1 1 1 1 1 1 1 1 1]: 23 nonzero entries
# no sparsity:                           36 nonzero entries, 1440 total in CA matrix, 7200 nonzero KKT matrix entries
